{"version":3,"sources":["api/youtube.js","actions/index.js","types.js","components/VideoItem.js","components/VideoList.js","components/VideoScreen.js","components/SearchInput.js","components/App.js","reducers/fetchVideosReducer.js","reducers/fetchVideoIndexReducer.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","fetchVideos","value","dispatch","a","youtube","get","params","part","q","key","response","type","payload","fetchVideoIndex","index","connect","state","videos","useEffect","length","data","items","map","video","onClick","e","target","id","className","snippet","description","title","src","thumbnails","medium","url","alt","videoId","renderVideo","VideoList","currentVideo","pageInfo","totalResults","allow","style","marginTop","marginLeft","renderInput","input","placeholder","formWrapped","reduxForm","form","handleSubmit","onSubmit","search","Field","name","component","App","fetchVideosReducer","action","fetchVideoIndexReducer","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ffb984fd.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst URL = \"https://www.googleapis.com/youtube/v3/\";\r\n\r\nexport default axios.create({\r\n\tbaseURL: URL\r\n});\r\n","import youtube from \"../api/youtube\";\r\nimport { FETCH_VIDEOS, FETCH_VIDEO_INDEX } from \"../types\";\r\n\r\nexport const fetchVideos = (value) => async (dispatch) => {\r\n\tconst KEY = \"AIzaSyChpQtYJFrs4iRFRFOx0lCWnSzKlTYAXZA\";\r\n\r\n\tconst response = await youtube.get(\"search/\", {\r\n\t\tparams: {\r\n\t\t\tpart: \"snippet\",\r\n\t\t\tq: value,\r\n\t\t\tkey: KEY\r\n\t\t}\r\n\t});\r\n\tdispatch({ type: FETCH_VIDEOS, payload: response });\r\n};\r\n\r\nexport const fetchVideoIndex = (index) => {\r\n\treturn {\r\n\t\ttype: FETCH_VIDEO_INDEX,\r\n\t\tpayload: index\r\n\t};\r\n};\r\n","export const FETCH_VIDEOS = \"FETCH_VIDEOS\";\r\nexport const FETCH_VIDEO_INDEX = \"FETCH_VIDEO_INDEX\";\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchVideos, fetchVideoIndex } from \"../actions/\";\r\n\r\nconst VideoItem = ({ videos, fetchVideos, fetchVideoIndex }) => {\r\n\tuseEffect(() => {\r\n\t\tfetchVideos(\"books\");\r\n\t}, []);\r\n\r\n\tconst renderVideo = () => {\r\n\t\tif (videos.length) {\r\n\t\t\treturn videos[0].data.items.map((video, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\t//grabs the index value from a video in order to display it at VideoScreen\r\n\t\t\t\t\t\tonClick={(e) => fetchVideoIndex(e.target.id)}\r\n\t\t\t\t\t\tclassName=\"video-item text-center card mx-3 my-2\"\r\n\t\t\t\t\t\tkey={video.snippet.description}\r\n\t\t\t\t\t\tid={index}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\tid={index}\r\n\t\t\t\t\t\t\tclassName=\"video-item-title lead card-title p-2\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{video.snippet.title}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tid={index}\r\n\t\t\t\t\t\t\tclassName=\"m-2 rounded\"\r\n\t\t\t\t\t\t\tsrc={video.snippet.thumbnails.medium.url}\r\n\t\t\t\t\t\t\talt={video.id.videoId}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\treturn <div>{renderVideo()}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn { videos: state.videos };\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ fetchVideos, fetchVideoIndex }\r\n)(VideoItem);\r\n","import React from \"react\";\r\nimport VideoItem from \"./VideoItem\";\r\n\r\nconst VideoList = () => {\r\n\treturn (\r\n\t\t<div className=\"video-list mb-2\">\r\n\t\t\t<VideoItem />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default VideoList;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst VideoScreen = ({ videos, currentVideo }) => {\r\n\tconst renderDefaultVideo = () => {\r\n\t\tif (videos.length && videos[0].data.pageInfo.totalResults) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"video-screen\">\r\n\t\t\t\t\t<p className=\"video-screen-title lead\">\r\n\t\t\t\t\t\t{videos[0].data.items[currentVideo].snippet.title}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<div className=\"iframe-container embed-responsive embed-responsive-16by9 w-auto\">\r\n\t\t\t\t\t\t<iframe\r\n\t\t\t\t\t\t\tclassName=\"rounded embed-responsive-item\"\r\n\t\t\t\t\t\t\ttitle=\"video\"\r\n\t\t\t\t\t\t\tsrc={`https://www.youtube.com/embed/${videos[0].data.items[currentVideo].id.videoId}`}\r\n\t\t\t\t\t\t\tallow=\"fullscreen\"\r\n\t\t\t\t\t\t></iframe>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className=\"video-screen-description\">\r\n\t\t\t\t\t\t{videos[0].data.items[currentVideo].snippet.description}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{ marginTop: 200, marginLeft: 550 }}\r\n\t\t\t\tclassName=\"d-flex justify-content-center\"\r\n\t\t\t>\r\n\t\t\t\t<h1>No results found!</h1>\r\n\t\t\t\t<i className=\"fas fa-exclamation-triangle mx-2 fa-3x ml-3\"></i>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\treturn <div>{renderDefaultVideo()}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn { videos: state.videos, currentVideo: state.currentVideo };\r\n};\r\n\r\nexport default connect(mapStateToProps)(VideoScreen);\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchVideos, fetchVideoIndex } from \"../actions/\";\r\n\r\nconst renderInput = ({ input }) => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\tclassName=\"search-input form-control mx-auto my-3\"\r\n\t\t\ttype=\"text\"\r\n\t\t\tplaceholder=\"Search\"\r\n\t\t\t{...input}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst SearchInput = ({ fetchVideos, fetchVideoIndex, handleSubmit }) => {\r\n\tconst onSubmit = async (value) => {\r\n\t\tawait fetchVideos(value);\r\n\r\n\t\t// resets the index so the first video is always displayed by default\r\n\t\tfetchVideoIndex(0);\r\n\t\tvalue.search = \"\";\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<Field name=\"search\" component={renderInput} />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nconst formWrapped = reduxForm({ form: \"searchInput\" })(SearchInput);\r\n\r\nexport default connect(\r\n\tnull,\r\n\t{ fetchVideos, fetchVideoIndex }\r\n)(formWrapped);\r\n","import React from \"react\";\r\nimport VideoList from \"./VideoList\";\r\nimport VideoScreen from \"./VideoScreen\";\r\nimport SearchInput from \"./SearchInput\";\r\nimport \"../styles.css\";\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className=\"app container-fluid\">\r\n\t\t\t<SearchInput />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-12 col-lg-8\">\r\n\t\t\t\t\t<VideoScreen />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-lg-4 d-flex justify-content-md-end justify-content-center\">\r\n\t\t\t\t\t<VideoList />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { FETCH_VIDEOS } from \"../types\";\r\n\r\nconst fetchVideosReducer = (state = [], action) => {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_VIDEOS:\r\n\t\t\treturn [action.payload];\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default fetchVideosReducer;\r\n","import { FETCH_VIDEO_INDEX } from \"../types\";\r\n\r\nconst fetchVideoIndexReducer = (state = 0, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_VIDEO_INDEX:\r\n\t\t\treturn action.payload;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default fetchVideoIndexReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport fetchVideosReducer from \"./fetchVideosReducer\";\r\nimport fetchVideoIndexReducer from \"./fetchVideoIndexReducer\";\r\n\r\nexport default combineReducers({\r\n\tform: formReducer,\r\n\tvideos: fetchVideosReducer,\r\n\tcurrentVideo: fetchVideoIndexReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}